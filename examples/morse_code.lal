(import "lib/lib.lal")

(defun 'encode 'c 'direction
  (let
    'chars (list
      "A"    "B"    "C"    "D"    "E"   "F"    "G"   "H"
      "I"    "J"    "K"    "L"    "M"   "N"    "O"   "P"
      "Q"    "R"    "S"    "T"    "U"   "V"    "W"   "X"
      "Y"    "Z"    " ")
    'morse (list
      ".-"   "-..." "-.-." "-.."  "."   "..-." "--." "...."
      ".."   ".---" "-.-"  ".-.." "--"  "-."   "---" ".--."
      "--.-" ".-."  "..."  "-"    "..-" "...-" ".--" "-..-"
      "-.--" "--.." "/")
    # True = text to morse
    (if direction
        (+ (nth (index c chars) morse) " ")
        (nth (index c morse) chars)
    )
  )
)
(defun 'translate 'chars 'dir
  # TODO: would be useful to get builtins just by name
  (accumulate (lambda 'x 'y (+ x y))
    (map
      (lambda 'c (encode c dir))
      chars)
    ""
  )
)
(defun 'to_morse   'chars (translate chars true))
(defun 'from_morse 'chars (translate chars false))

(print  (to_morse "THE QUICK BROWN FOX"))
(print
  (from_morse
    (list "-"   "...." "."   "/" "--.-" "..-"
          ".."  "-.-." "-.-" "/" "-..." ".-."
          "---" ".--"  "-."  "/" "..-." "---"
          "-..-")
  )
)
